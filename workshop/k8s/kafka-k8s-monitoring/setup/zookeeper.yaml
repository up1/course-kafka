apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  clusterIP: None
  ports:
    - { name: "zookeeper-client", port: 2181 }
  selector:
    app: zookeeper
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zookeeper
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: zookeeper
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  serviceName: zookeeper
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: zookeeper
          image: zookeeper:3.5
          env:
            - { name: ZOOKEEPER_COUNT,      value: "3" }
            - { name: HOST_DNS_PATTERN,     value: "zookeeper" }
            - { name: SERVER_JVMFLAGS,      value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1" }
            - { name: ZK_ROOT_LOGGER_LEVEL, value: "INFO, CONSOLE" }
            - { name: ZK_CONSOLE_THRESHOLD, value: "INFO" }
          resources:
            requests: { memory: "1Gi" }
            limits:   { memory: "1Gi" }
          ports:
            - { containerPort: 2181,  protocol: TCP }
            - { containerPort: 2888,  protocol: TCP }
            - { containerPort: 3888,  protocol: TCP }
          readinessProbe:
            tcpSocket:
              port: 2181
          volumeMounts:
            - {name: data,    mountPath: /var/lib/zookeeper }
            - {name: tmp,    mountPath: /tmp }
            - {name: vartmp, mountPath: /var/tmp }
      volumes:
        - { name: tmp,    emptyDir: {} }
        - { name: vartmp, emptyDir: {} }
        - { name: data, emptyDir: {} }
